---
import { Icon } from "astro-icon/components";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { formatDateToYYYYMMDD } from "../utils/date-utils";
import { getCategoryUrl, getTagUrl } from "../utils/url-utils";
import MetaItem from "./misc/MetaItem.astro";

interface Props {
	class?: string;
	contentType: "post" | "course";
	// Post specific
	published?: Date;
	updated?: Date;
	tags?: string[];
	category?: string | null;
	hideTagsForMobile?: boolean;
	hideUpdateDate?: boolean;
	// Course specific
	level?: "Beginner" | "Intermediate" | "Advanced";
	totalLessons?: number;
}

const {
	class: className,
	contentType,
	published,
	updated,
	tags = [],
	category,
	hideTagsForMobile = false,
	hideUpdateDate = false,
	level,
	totalLessons,
} = Astro.props;
---

<div
	class:list={[
		"flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2",
		className,
	]}
>
	{contentType === "post" ? (
		<>
		<!-- publish date -->
		{published && (
			<MetaItem iconName="material-symbols:calendar-today-outline-rounded">
				{formatDateToYYYYMMDD(published)}
			</MetaItem>
		)}

		<!-- update date -->
		{!hideUpdateDate && updated && published && updated.getTime() !== published.getTime() && (
			<MetaItem iconName="material-symbols:edit-calendar-outline-rounded">
				{formatDateToYYYYMMDD(updated)}
			</MetaItem>
		)}

		<!-- categories -->
		<MetaItem 
			iconName="material-symbols:book-2-outline-rounded"
			href={getCategoryUrl(category || null)}
			ariaLabel={`View all posts in the ${category || i18n(I18nKey.uncategorized)} category`}
		>
			{category || i18n(I18nKey.uncategorized)}
		</MetaItem>

		<!-- tags -->
		<div class:list={["items-center", { "flex": !hideTagsForMobile, "hidden md:flex": hideTagsForMobile }]}>
			<div class="meta-icon">
				<Icon name="material-symbols:tag-rounded" class="text-xl" />
			</div>
			<div class="flex flex-row flex-nowrap items-center">
				{tags && tags.length > 0 ? (
					tags.map((tag, i) => (
						<>
							<div class:list={[{ "hidden": i == 0 }, "mx-1.5 text-[var(--meta-divider)] text-sm"]}>
								/
							</div>
							<a
								href={getTagUrl(tag)}
								aria-label={`View all posts with the ${tag.trim()} tag`}
								class="link-lg transition text-50 text-sm font-medium
                                        hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap"
							>
								{tag.trim()}
							</a>
						</>
					))
				) : (
					<div class="transition text-50 text-sm font-medium">{i18n(I18nKey.noTags)}</div>
				)}
			</div>
		</div>
		</>
	) : (
		<>
		<!-- category -->
		{category && (
			<MetaItem 
				iconName="material-symbols:book-2-outline-rounded"
				href={getCategoryUrl(category)}
				ariaLabel={`View all courses in the ${category} category`}
			>
				{category}
			</MetaItem>
		)}

		<!-- level -->
		{level && (
			<MetaItem iconName="material-symbols:bar-chart-rounded">
				{level}
			</MetaItem>
		)}

		<!-- total lessons -->
		{totalLessons !== undefined && (
			<MetaItem iconName="material-symbols:menu-book-outline-rounded">
				{totalLessons} Lessons
			</MetaItem>
		)}
		</>
	)}
</div>
