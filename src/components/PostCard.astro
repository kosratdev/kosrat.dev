---
import type { CollectionEntry } from "astro:content";
import path from "node:path";
import { Icon } from "astro-icon/components";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { getDir } from "../utils/url-utils";
import BaseCard from "./BaseCard.astro";
import ContentMeta from "./ContentMeta.astro";
import ImageWrapper from "./misc/ImageWrapper.astro";

interface Props {
	class?: string;
	entry: CollectionEntry<"posts">;
	style?: string;
}

const { entry, style } = Astro.props;
const className = Astro.props.class;

const { title, published, updated, tags, category, image, description } =
	entry.data;
const url = `/posts/${entry.slug}/`;

const hasCover = image !== undefined && image !== null && image !== "";
const coverWidth = "28%";

const { remarkPluginFrontmatter } = await entry.render();
---

<BaseCard 
	{title} 
	{url} 
	{hasCover} 
	{coverWidth}
	description={description || remarkPluginFrontmatter.excerpt}
	{style}
	class={className}
>
	<ContentMeta 
		slot="metadata"
		contentType="post" 
		{published} 
		{updated} 
		{tags} 
		{category} 
		hideTagsForMobile={true} 
		hideUpdateDate={true} 
		class="mb-4"
	/>

	<div slot="footer" class="text-sm text-black/30 dark:text-white/30 flex gap-4 transition">
		<div>
			{remarkPluginFrontmatter.words} {" " + i18n(remarkPluginFrontmatter.words === 1 ? I18nKey.wordCount : I18nKey.wordsCount)}
		</div>
		<div>|</div>
		<div>
			{remarkPluginFrontmatter.minutes} {" " + i18n(remarkPluginFrontmatter.minutes === 1 ? I18nKey.minuteCount : I18nKey.minutesCount)}
		</div>
	</div>

	{hasCover && (
		<a 
			slot="cover"
			href={url} 
			aria-label={title}
			class="group w-full h-full rounded-xl overflow-hidden active:scale-95"
		>
			<div class="absolute pointer-events-none z-10 w-full h-full group-hover:bg-black/30 group-active:bg-black/50 transition rounded-xl" />
			<div class="absolute pointer-events-none z-20 w-full h-full flex items-center justify-center rounded-xl">
				<Icon
					name="material-symbols:chevron-right-rounded"
					class="transition opacity-0 group-hover:opacity-100 scale-50 group-hover:scale-100 text-white text-5xl"
				/>
			</div>
			<ImageWrapper
				id={`post-cover-${entry.slug}`}
				src={image}
				basePath={path.join("content/posts/", getDir(entry.id))}
				class="w-full h-full object-cover rounded-xl"
			/>
		</a>
	)}
</BaseCard>
